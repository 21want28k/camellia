
server:
  port: 6380
spring:
  application:
    name: camellia-redis-proxy-server

camellia-redis-proxy:
  #port: 6380 #优先级高于server.port，如果缺失，则使用server.port，如果设置为-6379则会随机一个可用端口
  #application-name: camellia-redis-proxy-server  #优先级高于spring.application.name，如果缺失，则使用spring.application.name
  console-port: 16379 #console端口，默认是16379，如果设置为-16379则会随机一个可用端口，如果设置为0，则不启动console
  password: pass123   #proxy的密码，如果设置了自定义的client-auth-provider-class-name，则密码参数无效
  monitor-enable: false  #是否开启监控
  monitor-interval-seconds: 60 #监控回调的间隔
#  cluster-mode-enable: true #cluster-mode，把proxy伪装成cluster，需要在camellia-redis-proxy.properties配置proxy.cluster.mode.nodes
  plugins: #
    - monitorPlugin
    - bigKeyPlugin
    - hotKeyPlugin
  transpond:
    type: local #使用本地配置
    local:
      type: simple
      resource: redis://@127.0.0.1:6379 #转发的redis地址
#      resource: redis-sentinel://@127.0.0.1:26379/master1
#      resource: redis-sentinel-slaves://@127.0.0.1:26379/master1
#      resource: redis-cluster://@nim-redis-perftest-jd-1.v1.yunxin.jd1.vpc:7000,nim-redis-perftest-jd-2.v1.yunxin.jd1.vpc:7006,nim-redis-perftest-jd-3.v1.yunxin.jd1.vpc:7010
#      type: complex
#      json-file: resource-table.json
#    type: remote
#    remote:
#      url: http://127.0.0.1:8080 #camellia-dashboard's address
#      check-interval-millis: 5000 # Polling period to camellia-dashboard
#      dynamic: true # indicates that multiple sets of configurations are supported, the default is true
#      header-map: # custom header map for request to camellia-dashboard (optional)
#        api-key: secretToken # header name: api-key, header value: secretToken
#    redis-conf:
#      multi-write-mode: first_resource_only #双写的模式，默认第一个地址返回就返回
#      close-idle-connection: true #是否关闭空闲连接，默认true
#      check-idle-connection-threshold-seconds: 600  #多久算空闲连接，默认600s
#      preheat: true #预热开关

